{% assign current_pagination_limit = settings.pagination_limit %}

<style type="text/css">
  span.money {
    font-weight: 400 !important;
    font-size: 18px !important;
    padding-top: 0px;
    color: #000;
}
  
  h1:not(.tt-title-subpages):not([class^="tt-title"]):not([class^="tt-collapse"]):not([class^="tt-aside"]) {
    
    margin-left: 5px;
}
  .pagecollection .filter_tab {

    margin-left: 5px;
}
  
</style>
{%- assign item = settings -%}
{%- assign item_sidebar = item.sidebar -%}
{%- capture flip_sidebar -%}{% if item_sidebar contains "rightColumn" %} flex-sm-row-reverse{% endif %}{%- endcapture -%}
{%- assign pagination_limit_const = settings.pagination_limit | times: 1 -%}


{% for block in section.blocks %}
  {% if block.type == 'collection_header' and collection.handle == block.settings.collection and block.settings.banner_desktop != blank %}
    <div class="{% unless block.settings.fullwidth %}container{% endunless %} collection_header-container">
      <div class="collection_header-inner">
        {% if block.settings.url != blank %}
        <a href="{{ block.settings.url }}">
        {% endif %}
        <img class="collection_header-image collection_header-image-desktop {% if block.settings.banner_mobile != blank %}has-mobile-image{% endif %}" src="{{ block.settings.banner_desktop | img_url: 'master' }}" />
        {% if block.settings.banner_mobile != blank %}
        <img class="collection_header-image collection_header-image-mobile" src="{{ block.settings.banner_mobile | img_url: 'master' }}" />
        {% endif %}
        {% if block.settings.url != blank %}
        </a>
        {% endif %}
      </div>
    </div>
  {% break %}
  {% endif %}
{% endfor %}


<div class="container-indent">
  {% capture captured_page %}
{% include 'v9-collection-header' %}
{% include 'v10-collection-product-list-combined' %}
{% endcapture %}
<div class="container">
{% include 'v10-collection-banner' %}
  </div>  
  <div class="qq container{% if item_sidebar contains "_wide" %}-fluid-custom container-fluid-custom-mobile-padding{% endif %}">
    <div class="row{{ flip_sidebar }}">

      {%- unless item_sidebar contains "_disable_" -%}{%- include "collection-page-sidebar" -%}{%- endunless -%}

      <div class="{% if item_sidebar contains "hidden_" %}col-md-12{% else %}col-md-12 col-lg-9 col-xl-9{% endif %}">
        {%- if collection.description != '' and settings.show_collection_description -%}
        <div class="content-indent">
          <div class="row tt-layout-promo-box">
            {{ collection.description }}
          </div>
        </div>{%- endif -%}
        
        <div class="content-indent container-fluid-custom-mobile-padding-02">

          {%- paginate collection.products by current_pagination_limit -%}

          <!--<div class="tt-filters-options{% if item_sidebar contains "hidden_closed" %} desctop-no-sidebar{% endif %}">

            {%- include "collection-page-toolbar" -%}

          </div>-->

          <div class="tt-product-listing row{% if collection.products.size == 0 %} flex-center-message{% endif %}{% if settings.products_in_one_row %} tt-col-one only-row{% endif %}" data-onerow="{{ settings.use_one_row_in_theme }}">
            {%- if collection.products.size > 0 -%}
            {%- for product in collection.products -%}
            <div class="col-6 col-md-{{ item.products_in_column }} tt-col-item collection-page-grid">
              {%- include "product-grid-item-cls" -%}
            </div>
            {%- endfor -%}
            {%- else -%}
            <div class="tt-empty-search">
              <span class="tt-icon icon-g-84"></span>
              <h2 class="tt-title">{{ 'collections.general.empty' | t }}</h2>
              <p>{{ 'collections.general.sort_result' | t }}</p>
            </div>
            {%- endif -%}
          </div>

          <div class="text-center tt_product_showmore infinitybutton{% if settings.enable_infinite_scroll == 'autoscroll' %} autoscroll_yes{% endif %}{% if paginate.next == empty? and paginate.previous == empty? %} hide{% endif %}">
            
            {%- if paginate.next -%}
            <div class="show-more">
              <a href="{{ paginate.next.url }}" class="btn btn-border ttshowmorestyle{% if settings.enable_infinite_scroll == 'autoscroll' %} autoscroll hide{% endif %}">{{ 'collections.toolbar.button_show_more' | t }}</a>
            </div>
            {%- else -%}
            {%- if paginate.previous -%}
            <div class="show-more tt_item_all_js" >
              <a href="#" class="btn btn-border01 ttshowmorestyle disable">{{ 'collections.toolbar.button_show_more_disabled' | t }}</a>
            </div>
            {%- endif -%}
            {%- endif -%}

          </div>
          
          {%- endpaginate -%}
          
        </div>
      </div>
    </div>
  </div>
</div>
<style>
  @media (min-width: 791px) {
    div#v10-product-guarantee {
      flex: 0 0 33.33333%;
      max-width: 33.33333%;
      margin-top: 48px!important;
      display: none;
    }
  }
  div#v10-product-guarantee {
    display: none;
  }
  
  
  
  @media only screen and (max-width: 767px) {
    
    .col-6 {
    flex: unset;
    max-width: 100%;
}
    
    .col-6.col-md-4.tt-col-item {
    width: 100% !important;
}
    
    .tt-product span.tt-img {
    height: auto !important;
}
    
    .product-parent .tt-description .tt-product-inside-hover {

    flex-direction: unset;
          width: 100%;
}
    
    
ul.tt-options-swatch.options-middle.filtres-js li {
    margin: 5px !important;
    width: 20%;
    float: left;
    margin-bottom: 20px !important;
}
    
ul.tt-options-swatch {
    display: flex !important;
    float: left;
    width: 100%;
}
    .tt-product-inside-hover {
    position: relative;
    top: 10px;
}
    
      footer .tt-footer-col, footer .tt-footer-center {
    padding-bottom: 36px;
    background: #ebebeb !important;
    margin-top: 40px;
}
  
  .tab-content.shape.active {
    float: left;
    width: 100%;
}
  
.v10-collection-banner .tab-content:not(.colour) ul.tt-options-swatch li {
    width: auto;
    padding: 0px 20px;
}
  
  ul.tt-options-swatch {
    display: flex !important;
    float: left;
    width: 100%;
    justify-content: center;
    align-items: center;
}
ul.tt-options-swatch.options-middle.filtres-js li {
    margin: 5px !important;
    width: auto;
    float: left;
    margin-bottom: 20px !important;
    padding: 20px;
}
    
    
  }
  
  #tt-pageContent > .container-indent:not(.nomargin):not([class^="tt-offset"]) {
    margin-top: 0px;
}
{% for block in section.blocks %}
  {% if block.type == 'collection_filter_swatch' %}
  .pagecollection .tab-content-wrapper12.filter .reset-flter a:not(.reset-filter).{{ block.settings.swatch }} {
    padding-left: 35px;
  }
  .pagecollection .tab-content-wrapper12.filter .reset-flter a:not(.reset-filter).{{ block.settings.swatch }}:before {
    content: '';
    display: block;
    width: 10px;
    height: 10px;
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 50%;
    background-color: {{ block.settings.swatch_color }};
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    {% if block.settings.swatch_image != blank %}
    background-image: url('{{ block.settings.swatch_image | img_url: 'master' }}');
    {% endif %}
  }
  {% endif %}
{% endfor %}
</style>

{% schema %}
  {
    "name": "Collection Template",
    "settings": [
    ],
    "blocks": [
      {
        "type": "collection_header",
        "name": "Collection Header",
        "settings": [
          {
            "type": "collection",
            "id": "collection",
            "label": "Collection"
          },
          {
            "type": "checkbox",
            "id": "fullwidth",
            "label": "Fullwidth Banner",
            "default": false
          },
          {
            "type": "image_picker",
            "id": "banner_desktop",
            "label": "Banner Desktop"
          },
          {
            "type": "image_picker",
            "id": "banner_mobile",
            "label": "Banner Mobile"
          },
          {
            "type": "url",
            "id": "url",
            "label": "Banner URL"
          }
        ]
      },
      {
        "type": "collection_filter_swatch",
        "name": "Collection Filter Swatch",
        "settings": [
          {
            "type": "text",
            "id": "swatch",
            "label": "Swatch"
          },
          {
            "type": "image_picker",
            "id": "swatch_image",
            "label": "Swatch Image"
          },
          {
            "type": "color",
            "id": "swatch_color",
            "label": "Swatch Color"
          }
        ]
      }
    ]
  }
{% endschema %}